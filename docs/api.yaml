schemes:
  - http
  - https
securityDefinitions:
  Bearer:
    type: apiKey
    name: authorization
    in: header
paths:
  /auth/signup:
    post:
      tags:
        - Auth
      summary: creates a new user
      produces:
        - application/json
      parameters:
        - name: first_name
          description: First name of the user
          required: true
          type: string
          in: body
        - name: last_name
          description: Last name of the user
          required: true
          type: string
          in: body
        - name: email
          description: Email of the user
          required: true
          type: string
          in: body
        - name: password
          description: Password of the user
          required: true
          type: string
          in: body
        - name: is_admin
          description: Admin status of user
          required: false
          type: boolean
          in: body
        - name: img
          description: Image of the user
          required: false
          type: string
          in: body
      responses:
        201:
          description: success
          schema:
            type: object
            $ref: "#/definitions/user"
        409:
          description: User exists already
        400:
          description: error
  /auth/signin:
    post:
      tags:
        - Auth
      summary: Logs in a user
      produces:
        - application/json
      parameters:
        - name: email
          description: Email of the user
          required: true
          type: string
          in: body
        - name: password
          description: Password of the user
          required: true
          type: string
          in: body
      responses:
        200:
          description: success
          schema:
            type: object
            $ref: "#/definitions/user"
        404:
          description: User does not exist
        401:
          description: Email or password incomplete
  /bus:
    post:
      tags:
        - Bus
      security:
        - Bearer: []
      summary: Adds a bus to the database
      produces:
        - application/json
      parameters:
        - name: number_plate
          description: Unique plate number of the bus
          required: true
          type: string
          in: body
        - name: manufacturer
          description: Manufactuer of the bus
          required: true
          type: string
          in: body
        - name: model
          description: Model of the bus
          required: true
          type: string
          in: body
        - name: year
          description: Year bus was manufactured
          required: true
          type: integer
          in: body
        - name: color
          description: Color of the bus
          required: true
          type: string
          in: body
        - name: capacity
          description: Capacity of the bus
          required: true
          type: integer
          in: body
        - name: img
          description: Image of the bus
          required: false
          type: string
          in: body
      responses: # server responses
        201:
          description: succes
          schema:
            $ref: "#/definitions/bus"
        409:
          description: A bus with same plate number already exists
        401:
          description: Admin access only
  /trips:
    post:
      tags:
        - Trip
      summary: Creates a new trip
      security:
        - Bearer: []
      produces:
        - application/json
      parameters:
        - name: bus_id
          description: Bus unique ID
          required: true
          type: string
          in: body
        - name: origin
          description: Bus take off point
          required: true
          type: string
          in: body
        - name: destination
          description: Destination of the bus
          required: true
          type: string
          in: body
        - name: trip_date
          description: Date of the trip
          required: true
          type: string
          in: body
        - name: trip_time
          description: Take off time for the trip
          required: true
          type: string
          in: body
        - name: fare
          description: Transport fare for the trip
          required: true
          type: integer
          in: body
      responses: # server responses
        201:
          description: success
          schema:
            $ref: "#/definitions/trip"
        # 409:
        #   description: A trip with this bus is active
        401:
          description: Admin access only
        404:
          description: Selected bus does not exist
  /trips/{trip_id}:
    delete:
      tags:
        - Trip
      summary: Cancels a trip
      security:
        - Bearer: []
      produces:
        - application/json
      parameters:
        - in: path
          name: trip_id
          description: This is the unique ID of the trip
          required: true
          type: string
      responses: # server responses
        200:
          description: success
        400:
          description: Trip cannot be cancelled
        401:
          description: Admin access only
        404:
          description: Trip does not exist
    patch:
      tags:
        - Trip
      summary: Updates a trip
      security:
        - Bearer: []
      produces:
        - application/json
      parameters:
        - name: bus_id
          description: Bus unique ID
          required: true
          type: string
          in: body
        - name: origin
          description: Bus take off point
          required: false
          type: string
          in: body
        - name: destination
          description: Destination of the bus
          required: false
          type: string
          in: body
        - name: trip_date
          description: Date of the trip
          required: false
          type: string
          in: body
        - name: trip_time
          description: Take off time for the trip
          required: false
          type: string
          in: body
        - name: fare
          description: Transport fare for the trip
          required: false
          type: integer
          in: body
      responses: # server responses
        200:
          description: success
          schema:
            $ref: "#/definitions/trip"
        # 409:
        #   description: A trip with this bus is active
        401:
          description: Admin access only
        404:
          description: Selected trip does not exist
  
  /trips/:
    get:
      tags:
        - Trip
      summary: Gets all trips
      produces:
        - application/json
      responses:
        200:
          description: success
          schema:
            type: array
            $ref: "#/definitions/trip"
        404:
          description: There are no trips
  /trips/search/:
    get:
      tags:
        - Trip
      summary: Search for trips
      produces:
        - application/json
      parameters:
        - in: query
          name: origin
          description: Search for trips with this origin
          required: false
        - in: query
          name: destination
          description: Search for trips with this destination
          required: false
      responses:
        200:
          description: success
          schema:
            type: array
            $ref: "#/definitions/trip"
        404:
          description: There are no trips
  /bookings/:
    post:
      tags:
        - Booking
      summary: Books a trip
      security:
        - Bearer: []
      produces:
        - application/json
      parameters:
        - in: body
          name: trip_id
          description: ID of a trip
          required: true
          type: string
        - in: body
          name: seat
          description: Seat number
          required: false
          type: integer
      responses:
        201:
          description: success
          schema:
            $ref: "#/definitions/booking"
        400:
          description: Failed
        404:
          description: Trip does not exist
    get:
      tags:
        - Booking
      summary: retrieve all bookings
      security:
        - Bearer: []
      produces:
        - application/json
      responses: # server responses
        200:
          description: success
          schema:
            $ref: "#/definitions/booking"
        # 404:
        #   description: There are no bookings
  /booking/{booking_id}:
    delete:
      tags:
        - Booking
      summary: Cancel a booking
      security:
        - Bearer: []
      produces:
        - application/json
      parameters:
        - in: path
          name: booking_id
          description: Unique ID of a booking
          required: true
          type: string
      responses:
        200:
          description: Success
        400:
          description: This booking cannot be deleted
        404:
          description: Booking does not belong to user
definitions: # Schema defination for request body
  user:
    type: object
    properties:
      user_id:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      email:
        type: string
      password:
        type: string
      is_admin:
        type: boolean
      img:
        type: string
  bus:
    type: object
    properties:
      user_id:
        type: string
      bus_id:
        type: string
      number_plate:
        type: string
      manufacturer:
        type: string
      model:
        type: string
      year:
        type: integer
      color:
        type: string
      capacity:
        type: integer
      img:
        type: string
  trip:
    type: object
    properties:
      trip_id:
        type: string
      user_id:
        type: string
      bus_id:
        type: string
      origin:
        type: string
      destination:
        type: string
      trip_date:
        type: string
      trip_time:
        type: string
      fare:
        type: integer
  booking:
    type: object
    properties:
      user_id:
        type: string
      trip_id:
        type: string
      booking_id:
        type: string
      seat_number:
        type: integer
